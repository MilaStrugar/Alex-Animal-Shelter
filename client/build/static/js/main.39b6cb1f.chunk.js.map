{"version":3,"sources":["components/AddPet.js","components/AllPets.js","components/EditPet.js","components/OnePet.js","App.js","reportWebVitals.js","index.js"],"names":["AddPet","useState","pet_name","pet_type","pet_description","skill1","skill2","skill3","addPet","setaddPet","errors","setErrors","changeHandler","e","console","log","target","name","value","to","onSubmit","preventDefault","axios","post","then","response","data","navigate","catch","err","className","htmlFor","type","id","onChange","message","AllPets","allPets","setAllPets","useEffect","get","map","Allpets","i","_id","EditPet","props","addPetsid","put","OnePet","allPetsid","onClick","delete","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b6cb1f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router'\nimport axios from 'axios'\n\nconst AddPet = () => {\n\n    const [addPet, setaddPet] = useState({\n        pet_name: \"\",\n        pet_type: \"\",\n        pet_description: \"\",\n        skill1: \"\",\n        skill2: \"\",\n        skill3: \"\",\n    })\n\n    const [errors, setErrors] = useState({})\n\n\n    const changeHandler = (e) => {\n        console.log(\"Changing input\")\n        console.log(e.target)\n        setaddPet({\n            ...addPet,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        axios.post(\"http://localhost:8000/api/pet\", addPet)\n            .then(response => {\n                console.log(response => (\"response from the result\", response))\n                if (response.data.errors) {\n                    console.log(\"You made a validation errror\")\n                    setErrors(response.data.errors)\n                }\n                else {\n                    navigate(\"/\")\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div>\n            <Link to=\"/\">back to home</Link>\n            <h1>Know a pet needing a home?</h1>\n            <form onSubmit={submitHandler} className=\"col-6 mx-auto\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Pet name:</label>\n                    <input type=\"text\" name=\"pet_name\" id=\"\" className=\"form-control\" onChange={changeHandler} />\n                    <p className=\"text-danger\">{errors.pet_name ? errors.pet_name.message : \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Pet type:</label>\n                    <input type=\"text\" name=\"pet_type\" id=\"\" className=\"form-control\" onChange={changeHandler} />\n                    <p className=\"text-danger\">{errors.pet_type ? errors.pet_type.message : \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Description:</label>\n                    <input type=\"text\" name=\"pet_description\" id=\"\" className=\"form-control\" onChange={changeHandler} />\n                    <p className=\"text-danger\">{errors.pet_description ? errors.pet_description.message : \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Skill 1:</label>\n                    <input type=\"text\" name=\"skill1\" id=\"\" className=\"form-control\" onChange={changeHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Skill 2:</label>\n                    <input type=\"text\" name=\"skill2\" id=\"\" className=\"form-control\" onChange={changeHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Skill 3:</label>\n                    <input type=\"text\" name=\"skill3\" id=\"\" className=\"form-control\" onChange={changeHandler} />\n                </div>\n                <input type=\"submit\" value=\"Add Pet!\" className=\"btn btn-success\" />\n            </form>\n        </div>\n    );\n};\n\n\nexport default AddPet;","import React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router'\nimport axios from 'axios'\n\nconst AllPets = () => {\n\n    const [allPets, setAllPets] = useState([])\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pet/all\")\n            .then(response => {\n                console.log(\"request for all pets\")\n                console.log(response)\n                console.log(\"request for all pets\")\n                setAllPets(response.data)\n            })\n            .catch(err => console.log(\"error retriving the pet\", err))\n    }, [])\n\n    return (\n        <div>\n            <Link to=\"/pet\">Add a pet to shelter</Link>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h4 className=\"card-title\">These pets are looking for a good home</h4>\n                    {allPets.map((Allpets, i) => {\n                        return <div className=\"card col-8 mx-auto\" key={i}>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Type</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>{Allpets.pet_name}</td>\n                                        <td>{Allpets.pet_type}</td>\n                                        <td><p><Link to={`/pet/${Allpets._id}`}>Details</Link>\n                                            |<Link to={`pet/update/${Allpets._id}`}>Edit</Link></p></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default AllPets;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport { Link } from '@reach/router'\n\nconst EditPet = (props) => {\n\n    const [addPet, setaddPet] = useState({\n        pet_name: \"\",\n        pet_type: \"\",\n        pet_description: \"\",\n        skill1: \"\",\n        skill2: \"\",\n        skill3: \"\",\n    })\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pet/${props.addPetsid}`)\n            .then(response => {\n                console.log(\"edit form getting info about pet\", response)\n                setaddPet(response.data)\n            })\n            .catch(err => console.log(\"errrrr\", err))\n    }, [])\n\n    const [errors, setErrors] = useState({})\n\n    const changeHandler = (e) => {\n        console.log(\"Changing input\")\n        console.log(e.target)\n        setaddPet({\n            ...addPet,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        axios.put(`http://localhost:8000/api/pet/update/${props.addPetsid}`, addPet)\n            .then(response => {\n                console.log(response => (\"response from the result\", response))\n                if (response.data.errors) {\n                    console.log(\"You made a validation errror\")\n                    setErrors(response.data.errors)\n                }\n                else {\n\n                    navigate(\"/\")\n                }\n            })\n            .catch(err => console.log(err))\n    }\n    return (\n        <div>\n            <Link to=\"/\">back to home</Link>\n            <h1>Edit {addPet.pet_name}</h1>\n            <form onSubmit={submitHandler} className=\"col-6 mx-auto\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Pet name:</label>\n                    <input type=\"text\" name=\"pet_name\" id=\"\" value={addPet.pet_name} className=\"form-control\" onChange={changeHandler} />\n                    <p className=\"text-danger\">{errors.pet_name ? errors.pet_name.message : \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Pet type:</label>\n                    <input type=\"text\" name=\"pet_type\" id=\"\" value={addPet.pet_type} className=\"form-control\" onChange={changeHandler} />\n                    <p className=\"text-danger\">{errors.pet_type ? errors.pet_type.message : \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Description:</label>\n                    <input type=\"text\" name=\"pet_description\" id=\"\" value={addPet.pet_description} className=\"form-control\" onChange={changeHandler} />\n                    <p className=\"text-danger\">{errors.pet_description ? errors.pet_description.message : \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Skill 1:</label>\n                    <input type=\"text\" name=\"skill1\" id=\"\" value={addPet.skill1} className=\"form-control\" onChange={changeHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Skill 2:</label>\n                    <input type=\"text\" name=\"skill2\" id=\"\" value={addPet.skill2} className=\"form-control\" onChange={changeHandler} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Skill 3:</label>\n                    <input type=\"text\" name=\"skill3\" id=\"\" value={addPet.skill3} className=\"form-control\" onChange={changeHandler} />\n                </div>\n                <input type=\"submit\" value=\"Edit Pet!\" className=\"btn btn-success\" />\n            </form>\n        </div>\n    );\n};\n\n\nexport default EditPet;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport { Link, navigate } from '@reach/router'\n\nconst OnePet = (props) => {\n\n    const [allPets, setAllPets] = useState({})\n\n    const deletePet = (e) => {\n        console.log(\"Pet is adopted!\")\n        axios.delete(`http://localhost:8000/api/pet/delete/${props.allPetsid}`)\n            .then(response => {\n                console.log(\"requesto to adopt the pet\")\n                console.log(response)\n                navigate(\"/\")\n            })\n            .catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pet/${props.allPetsid}`)\n            .then(response => {\n                console.log(\"Response trying to get specific destination\", response)\n                setAllPets(response.data)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <div>\n            <Link to=\"/\">back to home</Link>\n            <button className=\"btn btn-danger\" onClick={deletePet}>Adopt a Pet</button>\n            <h1>Details about:</h1>\n            <h4>Pet type: {allPets.pet_type}</h4>\n            <p>Pet description: {allPets.pet_description}</p>\n            <h4>Pet Skills:</h4>\n            <p>{allPets.skill1}</p>\n            <p>{allPets.skill2}</p>\n            <p>{allPets.skill3}</p>\n            <button className=\"btn btn-success\">Like {allPets.pet_name}</button>\n        </div>\n    );\n};\n\n\nexport default OnePet;","import { Router } from '@reach/router';\nimport './App.css';\nimport AddPet from './components/AddPet';\nimport AllPets from './components/AllPets';\nimport EditPet from './components/EditPet';\nimport OnePet from './components/OnePet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter:</h1>\n      <Router>\n        <AllPets path=\"/\" />\n        <OnePet path=\"/pet/:allPetsid\" />\n        <AddPet path=\"/pet\" />\n        <EditPet path=\"/pet/update/:addPetsid\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}